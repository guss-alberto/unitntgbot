x-service-common: &service-common
  build: .
  # image: ghcr.io/guss-alberto/unitntgbot
  restart: unless-stopped

services:
  kafka:
    image: bitnami/kafka:3.8.0
    restart: unless-stopped
    ports:
      - 9094:9094
    volumes:
      - kafka-data:/bitnami
    environment:
      # KRaft settings
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      # Listeners
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://${CONTAINER_HOST_IP:-127.0.0.1}:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER

  telegram_bot:
    <<: *service-common
    build:
      args:
        PACKAGE: bot_frontend
    environment:
      TELEGRAM_BOT_TOKEN: $TELEGRAM_BOT_TOKEN
      DB_PATH: /db/database.sqlite3
      TZ: Europe/Rome

      CANTEEN_SVC_URL: http://canteen_svc:5000
      EXAMS_SVC_URL: http://exams_svc:5000
      LECTURES_SVC_URL: http://lectures_svc:5000
      MAPS_SVC_URL: http://maps_svc:5000
      ROOMS_SVC_URL: http://rooms_svc:5000
      TT_SVC_URL: http://tt_svc:5000
    volumes:
      - bot-data:/db:rw

  notification_dispatcher:
    <<: *service-common
    build:
      args:
        PACKAGE: notification_dispatcher
    environment:
      TELEGRAM_BOT_TOKEN: $TELEGRAM_BOT_TOKEN
      KAFKA_SERVER: kafka:9092
      KAFKA_TOPIC: notifications

  updater:
    <<: *service-common
    command: updater
    environment:
      CANTEEN_SVC_URL: http://canteen_svc:5000
      EXAMS_SVC_URL: http://exams_svc:5000
      LECTURES_SVC_URL: http://lectures_svc:5000

  canteen_svc:
    <<: *service-common
    build:
      args:
        PACKAGE: canteen
    environment:
      DB_PATH: /db/database.sqlite3
    volumes:
      - canteen-data:/db:rw

  exams_svc:
    <<: *service-common
    build:
      args:
        PACKAGE: exams
    environment:
      DB_PATH: /db/database.sqlite3
    volumes:
      - exams-data:/db:rw

  lectures_svc:
    <<: *service-common
    build:
      args:
        PACKAGE: lectures
    environment:
      DB_PATH: /db/database.sqlite3
      EXAMS_SVC_URL: http://exams_svc:5000
    volumes:
      - lectures-data:/db:rw

  # maps_svc:
  #   <<: *service-common
  #   build:
  #     args:
  #       PACKAGE: maps

  # tt:
  #   <<: *service-common
  #   command: tt

  rooms_svc:
    <<: *service-common
    build:
      args:
        PACKAGE: rooms

volumes:
  bot-data:
  canteen-data:
  exams-data:
  lectures-data:
  kafka-data:
